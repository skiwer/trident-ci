// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.0
// source: api/pb/v1/pipeline.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FlowType int32

const (
	FlowType_SCM         FlowType = 0
	FlowType_Shell       FlowType = 1
	FlowType_DockerBuild FlowType = 2
	FlowType_Lua         FlowType = 3
)

// Enum value maps for FlowType.
var (
	FlowType_name = map[int32]string{
		0: "SCM",
		1: "Shell",
		2: "DockerBuild",
		3: "Lua",
	}
	FlowType_value = map[string]int32{
		"SCM":         0,
		"Shell":       1,
		"DockerBuild": 2,
		"Lua":         3,
	}
)

func (x FlowType) Enum() *FlowType {
	p := new(FlowType)
	*p = x
	return p
}

func (x FlowType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlowType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pb_v1_pipeline_proto_enumTypes[0].Descriptor()
}

func (FlowType) Type() protoreflect.EnumType {
	return &file_api_pb_v1_pipeline_proto_enumTypes[0]
}

func (x FlowType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlowType.Descriptor instead.
func (FlowType) EnumDescriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{0}
}

type VCSType int32

const (
	VCSType_Git VCSType = 0
	VCSType_SVN VCSType = 1
)

// Enum value maps for VCSType.
var (
	VCSType_name = map[int32]string{
		0: "Git",
		1: "SVN",
	}
	VCSType_value = map[string]int32{
		"Git": 0,
		"SVN": 1,
	}
)

func (x VCSType) Enum() *VCSType {
	p := new(VCSType)
	*p = x
	return p
}

func (x VCSType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VCSType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pb_v1_pipeline_proto_enumTypes[1].Descriptor()
}

func (VCSType) Type() protoreflect.EnumType {
	return &file_api_pb_v1_pipeline_proto_enumTypes[1]
}

func (x VCSType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VCSType.Descriptor instead.
func (VCSType) EnumDescriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{1}
}

// 凭证类型
type CreditType int32

const (
	CreditType_NoCredit CreditType = 0
	// 用户名+密码
	CreditType_TypeUserPwd CreditType = 1
	// ssh私钥
	CreditType_TypeSSHPrivateKey CreditType = 2
	// gitlab api token
	CreditType_TypeGitlabToken CreditType = 3
	// github access token
	CreditType_TypeGithubToken CreditType = 4
)

// Enum value maps for CreditType.
var (
	CreditType_name = map[int32]string{
		0: "NoCredit",
		1: "TypeUserPwd",
		2: "TypeSSHPrivateKey",
		3: "TypeGitlabToken",
		4: "TypeGithubToken",
	}
	CreditType_value = map[string]int32{
		"NoCredit":          0,
		"TypeUserPwd":       1,
		"TypeSSHPrivateKey": 2,
		"TypeGitlabToken":   3,
		"TypeGithubToken":   4,
	}
)

func (x CreditType) Enum() *CreditType {
	p := new(CreditType)
	*p = x
	return p
}

func (x CreditType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreditType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pb_v1_pipeline_proto_enumTypes[2].Descriptor()
}

func (CreditType) Type() protoreflect.EnumType {
	return &file_api_pb_v1_pipeline_proto_enumTypes[2]
}

func (x CreditType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreditType.Descriptor instead.
func (CreditType) EnumDescriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{2}
}

type ImagePullPolicy int32

const (
	ImagePullPolicy_IfNotPresent ImagePullPolicy = 0
	ImagePullPolicy_Always       ImagePullPolicy = 1
	ImagePullPolicy_Never        ImagePullPolicy = 2
)

// Enum value maps for ImagePullPolicy.
var (
	ImagePullPolicy_name = map[int32]string{
		0: "IfNotPresent",
		1: "Always",
		2: "Never",
	}
	ImagePullPolicy_value = map[string]int32{
		"IfNotPresent": 0,
		"Always":       1,
		"Never":        2,
	}
)

func (x ImagePullPolicy) Enum() *ImagePullPolicy {
	p := new(ImagePullPolicy)
	*p = x
	return p
}

func (x ImagePullPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImagePullPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pb_v1_pipeline_proto_enumTypes[3].Descriptor()
}

func (ImagePullPolicy) Type() protoreflect.EnumType {
	return &file_api_pb_v1_pipeline_proto_enumTypes[3]
}

func (x ImagePullPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImagePullPolicy.Descriptor instead.
func (ImagePullPolicy) EnumDescriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{3}
}

type ConditionConnector int32

const (
	ConditionConnector_And ConditionConnector = 0
	ConditionConnector_Or  ConditionConnector = 1
)

// Enum value maps for ConditionConnector.
var (
	ConditionConnector_name = map[int32]string{
		0: "And",
		1: "Or",
	}
	ConditionConnector_value = map[string]int32{
		"And": 0,
		"Or":  1,
	}
)

func (x ConditionConnector) Enum() *ConditionConnector {
	p := new(ConditionConnector)
	*p = x
	return p
}

func (x ConditionConnector) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionConnector) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pb_v1_pipeline_proto_enumTypes[4].Descriptor()
}

func (ConditionConnector) Type() protoreflect.EnumType {
	return &file_api_pb_v1_pipeline_proto_enumTypes[4]
}

func (x ConditionConnector) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionConnector.Descriptor instead.
func (ConditionConnector) EnumDescriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{4}
}

type Status int32

const (
	Status_Created  Status = 0
	Status_Started  Status = 1
	Status_Running  Status = 2
	Status_Succeed  Status = 3
	Status_Failed   Status = 4
	Status_Canceled Status = 5
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "Created",
		1: "Started",
		2: "Running",
		3: "Succeed",
		4: "Failed",
		5: "Canceled",
	}
	Status_value = map[string]int32{
		"Created":  0,
		"Started":  1,
		"Running":  2,
		"Succeed":  3,
		"Failed":   4,
		"Canceled": 5,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pb_v1_pipeline_proto_enumTypes[5].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_api_pb_v1_pipeline_proto_enumTypes[5]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{5}
}

type CurlCfg_RequestType int32

const (
	CurlCfg_GET    CurlCfg_RequestType = 0
	CurlCfg_POST   CurlCfg_RequestType = 1
	CurlCfg_PUT    CurlCfg_RequestType = 2
	CurlCfg_DELETE CurlCfg_RequestType = 3
)

// Enum value maps for CurlCfg_RequestType.
var (
	CurlCfg_RequestType_name = map[int32]string{
		0: "GET",
		1: "POST",
		2: "PUT",
		3: "DELETE",
	}
	CurlCfg_RequestType_value = map[string]int32{
		"GET":    0,
		"POST":   1,
		"PUT":    2,
		"DELETE": 3,
	}
)

func (x CurlCfg_RequestType) Enum() *CurlCfg_RequestType {
	p := new(CurlCfg_RequestType)
	*p = x
	return p
}

func (x CurlCfg_RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CurlCfg_RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pb_v1_pipeline_proto_enumTypes[6].Descriptor()
}

func (CurlCfg_RequestType) Type() protoreflect.EnumType {
	return &file_api_pb_v1_pipeline_proto_enumTypes[6]
}

func (x CurlCfg_RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CurlCfg_RequestType.Descriptor instead.
func (CurlCfg_RequestType) EnumDescriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{7, 0}
}

type CurlCfg_ContentType int32

const (
	CurlCfg_JSON  CurlCfg_ContentType = 0
	CurlCfg_Form  CurlCfg_ContentType = 1
	CurlCfg_Plain CurlCfg_ContentType = 2
	CurlCfg_Xml   CurlCfg_ContentType = 3
)

// Enum value maps for CurlCfg_ContentType.
var (
	CurlCfg_ContentType_name = map[int32]string{
		0: "JSON",
		1: "Form",
		2: "Plain",
		3: "Xml",
	}
	CurlCfg_ContentType_value = map[string]int32{
		"JSON":  0,
		"Form":  1,
		"Plain": 2,
		"Xml":   3,
	}
)

func (x CurlCfg_ContentType) Enum() *CurlCfg_ContentType {
	p := new(CurlCfg_ContentType)
	*p = x
	return p
}

func (x CurlCfg_ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CurlCfg_ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pb_v1_pipeline_proto_enumTypes[7].Descriptor()
}

func (CurlCfg_ContentType) Type() protoreflect.EnumType {
	return &file_api_pb_v1_pipeline_proto_enumTypes[7]
}

func (x CurlCfg_ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CurlCfg_ContentType.Descriptor instead.
func (CurlCfg_ContentType) EnumDescriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{7, 1}
}

type Condition_Compare int32

const (
	Condition_Equal    Condition_Compare = 0
	Condition_Less     Condition_Compare = 1
	Condition_More     Condition_Compare = 2
	Condition_Contains Condition_Compare = 3
)

// Enum value maps for Condition_Compare.
var (
	Condition_Compare_name = map[int32]string{
		0: "Equal",
		1: "Less",
		2: "More",
		3: "Contains",
	}
	Condition_Compare_value = map[string]int32{
		"Equal":    0,
		"Less":     1,
		"More":     2,
		"Contains": 3,
	}
)

func (x Condition_Compare) Enum() *Condition_Compare {
	p := new(Condition_Compare)
	*p = x
	return p
}

func (x Condition_Compare) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Condition_Compare) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pb_v1_pipeline_proto_enumTypes[8].Descriptor()
}

func (Condition_Compare) Type() protoreflect.EnumType {
	return &file_api_pb_v1_pipeline_proto_enumTypes[8]
}

func (x Condition_Compare) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Condition_Compare.Descriptor instead.
func (Condition_Compare) EnumDescriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{8, 0}
}

type Pipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Alias  string            `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Title  string            `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Flows  []*Flow           `protobuf:"bytes,4,rep,name=flows,proto3" json:"flows,omitempty"`
	Params map[string]string `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{0}
}

func (x *Pipeline) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Pipeline) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Pipeline) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Pipeline) GetFlows() []*Flow {
	if x != nil {
		return x.Flows
	}
	return nil
}

func (x *Pipeline) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type Flow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            string          `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Type           FlowType        `protobuf:"varint,2,opt,name=type,proto3,enum=trident.ci.v1.FlowType" json:"type,omitempty"`
	ScmCfg         *ScmCfg         `protobuf:"bytes,3,opt,name=scmCfg,proto3" json:"scmCfg,omitempty"`
	ShellCfg       *ShellCfg       `protobuf:"bytes,4,opt,name=shellCfg,proto3" json:"shellCfg,omitempty"`
	DockerBuildCfg *DockerBuildCfg `protobuf:"bytes,5,opt,name=dockerBuildCfg,proto3" json:"dockerBuildCfg,omitempty"`
	LuaCfg         *LuaCfg         `protobuf:"bytes,6,opt,name=luaCfg,proto3" json:"luaCfg,omitempty"`
	NoEnvRender    bool            `protobuf:"varint,7,opt,name=noEnvRender,proto3" json:"noEnvRender,omitempty"`
}

func (x *Flow) Reset() {
	*x = Flow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flow) ProtoMessage() {}

func (x *Flow) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flow.ProtoReflect.Descriptor instead.
func (*Flow) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{1}
}

func (x *Flow) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Flow) GetType() FlowType {
	if x != nil {
		return x.Type
	}
	return FlowType_SCM
}

func (x *Flow) GetScmCfg() *ScmCfg {
	if x != nil {
		return x.ScmCfg
	}
	return nil
}

func (x *Flow) GetShellCfg() *ShellCfg {
	if x != nil {
		return x.ShellCfg
	}
	return nil
}

func (x *Flow) GetDockerBuildCfg() *DockerBuildCfg {
	if x != nil {
		return x.DockerBuildCfg
	}
	return nil
}

func (x *Flow) GetLuaCfg() *LuaCfg {
	if x != nil {
		return x.LuaCfg
	}
	return nil
}

func (x *Flow) GetNoEnvRender() bool {
	if x != nil {
		return x.NoEnvRender
	}
	return false
}

// 凭证模型
type Credit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 凭证类型
	Type CreditType `protobuf:"varint,1,opt,name=type,proto3,enum=trident.ci.v1.CreditType" json:"type,omitempty"`
	// 用户名
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// 密码,当type=0或type=1（作为私钥的passphrase）时有效
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// ssh私钥,当type=1时有效
	PrivateKey string `protobuf:"bytes,4,opt,name=privateKey,proto3" json:"privateKey,omitempty"` // 鉴权token,当type=2｜3时有效
}

func (x *Credit) Reset() {
	*x = Credit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credit) ProtoMessage() {}

func (x *Credit) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credit.ProtoReflect.Descriptor instead.
func (*Credit) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{2}
}

func (x *Credit) GetType() CreditType {
	if x != nil {
		return x.Type
	}
	return CreditType_NoCredit
}

func (x *Credit) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Credit) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Credit) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type ScmCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VcsType VCSType `protobuf:"varint,1,opt,name=vcsType,proto3,enum=trident.ci.v1.VCSType" json:"vcsType,omitempty"`
	Address string  `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Branch  string  `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	Credit  *Credit `protobuf:"bytes,4,opt,name=credit,proto3" json:"credit,omitempty"`
}

func (x *ScmCfg) Reset() {
	*x = ScmCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScmCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScmCfg) ProtoMessage() {}

func (x *ScmCfg) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScmCfg.ProtoReflect.Descriptor instead.
func (*ScmCfg) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{3}
}

func (x *ScmCfg) GetVcsType() VCSType {
	if x != nil {
		return x.VcsType
	}
	return VCSType_Git
}

func (x *ScmCfg) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ScmCfg) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *ScmCfg) GetCredit() *Credit {
	if x != nil {
		return x.Credit
	}
	return nil
}

type ShellCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd             string          `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	WithDocker      bool            `protobuf:"varint,2,opt,name=withDocker,proto3" json:"withDocker,omitempty"`
	DockerImage     string          `protobuf:"bytes,3,opt,name=dockerImage,proto3" json:"dockerImage,omitempty"`
	ImagePullPolicy ImagePullPolicy `protobuf:"varint,4,opt,name=imagePullPolicy,proto3,enum=trident.ci.v1.ImagePullPolicy" json:"imagePullPolicy,omitempty"`
}

func (x *ShellCfg) Reset() {
	*x = ShellCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShellCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShellCfg) ProtoMessage() {}

func (x *ShellCfg) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShellCfg.ProtoReflect.Descriptor instead.
func (*ShellCfg) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{4}
}

func (x *ShellCfg) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *ShellCfg) GetWithDocker() bool {
	if x != nil {
		return x.WithDocker
	}
	return false
}

func (x *ShellCfg) GetDockerImage() string {
	if x != nil {
		return x.DockerImage
	}
	return ""
}

func (x *ShellCfg) GetImagePullPolicy() ImagePullPolicy {
	if x != nil {
		return x.ImagePullPolicy
	}
	return ImagePullPolicy_IfNotPresent
}

type DockerBuildCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseImage      string `protobuf:"bytes,1,opt,name=baseImage,proto3" json:"baseImage,omitempty"`
	TargetImage    string `protobuf:"bytes,2,opt,name=targetImage,proto3" json:"targetImage,omitempty"`
	Dockerfile     string `protobuf:"bytes,3,opt,name=dockerfile,proto3" json:"dockerfile,omitempty"`
	PushAfterBuild bool   `protobuf:"varint,4,opt,name=pushAfterBuild,proto3" json:"pushAfterBuild,omitempty"`
}

func (x *DockerBuildCfg) Reset() {
	*x = DockerBuildCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerBuildCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerBuildCfg) ProtoMessage() {}

func (x *DockerBuildCfg) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerBuildCfg.ProtoReflect.Descriptor instead.
func (*DockerBuildCfg) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{5}
}

func (x *DockerBuildCfg) GetBaseImage() string {
	if x != nil {
		return x.BaseImage
	}
	return ""
}

func (x *DockerBuildCfg) GetTargetImage() string {
	if x != nil {
		return x.TargetImage
	}
	return ""
}

func (x *DockerBuildCfg) GetDockerfile() string {
	if x != nil {
		return x.Dockerfile
	}
	return ""
}

func (x *DockerBuildCfg) GetPushAfterBuild() bool {
	if x != nil {
		return x.PushAfterBuild
	}
	return false
}

type LuaCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Script             string `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	ExitWhenErrorOccur bool   `protobuf:"varint,2,opt,name=exitWhenErrorOccur,proto3" json:"exitWhenErrorOccur,omitempty"`
}

func (x *LuaCfg) Reset() {
	*x = LuaCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LuaCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LuaCfg) ProtoMessage() {}

func (x *LuaCfg) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LuaCfg.ProtoReflect.Descriptor instead.
func (*LuaCfg) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{6}
}

func (x *LuaCfg) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *LuaCfg) GetExitWhenErrorOccur() bool {
	if x != nil {
		return x.ExitWhenErrorOccur
	}
	return false
}

type CurlCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url             string              `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	PostData        string              `protobuf:"bytes,2,opt,name=postData,proto3" json:"postData,omitempty"`
	ReqType         CurlCfg_RequestType `protobuf:"varint,3,opt,name=reqType,proto3,enum=trident.ci.v1.CurlCfg_RequestType" json:"reqType,omitempty"`
	ReqContentType  CurlCfg_ContentType `protobuf:"varint,4,opt,name=reqContentType,proto3,enum=trident.ci.v1.CurlCfg_ContentType" json:"reqContentType,omitempty"`
	RespContentType CurlCfg_ContentType `protobuf:"varint,5,opt,name=respContentType,proto3,enum=trident.ci.v1.CurlCfg_ContentType" json:"respContentType,omitempty"`
	ExtraReqHeader  string              `protobuf:"bytes,6,opt,name=extraReqHeader,proto3" json:"extraReqHeader,omitempty"`
	Timeout         string              `protobuf:"bytes,7,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *CurlCfg) Reset() {
	*x = CurlCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurlCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurlCfg) ProtoMessage() {}

func (x *CurlCfg) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurlCfg.ProtoReflect.Descriptor instead.
func (*CurlCfg) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{7}
}

func (x *CurlCfg) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CurlCfg) GetPostData() string {
	if x != nil {
		return x.PostData
	}
	return ""
}

func (x *CurlCfg) GetReqType() CurlCfg_RequestType {
	if x != nil {
		return x.ReqType
	}
	return CurlCfg_GET
}

func (x *CurlCfg) GetReqContentType() CurlCfg_ContentType {
	if x != nil {
		return x.ReqContentType
	}
	return CurlCfg_JSON
}

func (x *CurlCfg) GetRespContentType() CurlCfg_ContentType {
	if x != nil {
		return x.RespContentType
	}
	return CurlCfg_JSON
}

func (x *CurlCfg) GetExtraReqHeader() string {
	if x != nil {
		return x.ExtraReqHeader
	}
	return ""
}

func (x *CurlCfg) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Target  string            `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Compare Condition_Compare `protobuf:"varint,3,opt,name=compare,proto3,enum=trident.ci.v1.Condition_Compare" json:"compare,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{8}
}

func (x *Condition) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Condition) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Condition) GetCompare() Condition_Compare {
	if x != nil {
		return x.Compare
	}
	return Condition_Equal
}

type FlowProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flow       *Flow  `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
	Status     Status `protobuf:"varint,2,opt,name=status,proto3,enum=trident.ci.v1.Status" json:"status,omitempty"`
	StartTime  int64  `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	FinishTime int64  `protobuf:"varint,4,opt,name=finishTime,proto3" json:"finishTime,omitempty"`
	FailReason string `protobuf:"bytes,5,opt,name=failReason,proto3" json:"failReason,omitempty"`
}

func (x *FlowProgress) Reset() {
	*x = FlowProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowProgress) ProtoMessage() {}

func (x *FlowProgress) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowProgress.ProtoReflect.Descriptor instead.
func (*FlowProgress) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{9}
}

func (x *FlowProgress) GetFlow() *Flow {
	if x != nil {
		return x.Flow
	}
	return nil
}

func (x *FlowProgress) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Created
}

func (x *FlowProgress) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *FlowProgress) GetFinishTime() int64 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *FlowProgress) GetFailReason() string {
	if x != nil {
		return x.FailReason
	}
	return ""
}

type PipelineProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipeline         *Pipeline         `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Status           Status            `protobuf:"varint,2,opt,name=status,proto3,enum=trident.ci.v1.Status" json:"status,omitempty"`
	StartTime        int64             `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	CreateTime       int64             `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	FinishTime       int64             `protobuf:"varint,5,opt,name=finishTime,proto3" json:"finishTime,omitempty"`
	FailReason       string            `protobuf:"bytes,6,opt,name=failReason,proto3" json:"failReason,omitempty"`
	FlowProgresses   []*FlowProgress   `protobuf:"bytes,7,rep,name=flowProgresses,proto3" json:"flowProgresses,omitempty"`
	CurRunningFlowId string            `protobuf:"bytes,8,opt,name=curRunningFlowId,proto3" json:"curRunningFlowId,omitempty"`
	Env              map[string]string `protobuf:"bytes,9,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PipelineProgress) Reset() {
	*x = PipelineProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineProgress) ProtoMessage() {}

func (x *PipelineProgress) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineProgress.ProtoReflect.Descriptor instead.
func (*PipelineProgress) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{10}
}

func (x *PipelineProgress) GetPipeline() *Pipeline {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

func (x *PipelineProgress) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Created
}

func (x *PipelineProgress) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PipelineProgress) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *PipelineProgress) GetFinishTime() int64 {
	if x != nil {
		return x.FinishTime
	}
	return 0
}

func (x *PipelineProgress) GetFailReason() string {
	if x != nil {
		return x.FailReason
	}
	return ""
}

func (x *PipelineProgress) GetFlowProgresses() []*FlowProgress {
	if x != nil {
		return x.FlowProgresses
	}
	return nil
}

func (x *PipelineProgress) GetCurRunningFlowId() string {
	if x != nil {
		return x.CurRunningFlowId
	}
	return ""
}

func (x *PipelineProgress) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

type BuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipeline *Pipeline `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
}

func (x *BuildRequest) Reset() {
	*x = BuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildRequest) ProtoMessage() {}

func (x *BuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildRequest.ProtoReflect.Descriptor instead.
func (*BuildRequest) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{11}
}

func (x *BuildRequest) GetPipeline() *Pipeline {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

type BuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId string `protobuf:"bytes,1,opt,name=buildId,proto3" json:"buildId,omitempty"`
}

func (x *BuildResponse) Reset() {
	*x = BuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildResponse) ProtoMessage() {}

func (x *BuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildResponse.ProtoReflect.Descriptor instead.
func (*BuildResponse) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{12}
}

func (x *BuildResponse) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

type GetBuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId string `protobuf:"bytes,1,opt,name=buildId,proto3" json:"buildId,omitempty"`
}

func (x *GetBuildRequest) Reset() {
	*x = GetBuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildRequest) ProtoMessage() {}

func (x *GetBuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildRequest.ProtoReflect.Descriptor instead.
func (*GetBuildRequest) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{13}
}

func (x *GetBuildRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

type BuildDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress *PipelineProgress `protobuf:"bytes,1,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *BuildDetail) Reset() {
	*x = BuildDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildDetail) ProtoMessage() {}

func (x *BuildDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildDetail.ProtoReflect.Descriptor instead.
func (*BuildDetail) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{14}
}

func (x *BuildDetail) GetProgress() *PipelineProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type DeleteBuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId string `protobuf:"bytes,1,opt,name=buildId,proto3" json:"buildId,omitempty"`
}

func (x *DeleteBuildRequest) Reset() {
	*x = DeleteBuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBuildRequest) ProtoMessage() {}

func (x *DeleteBuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBuildRequest.ProtoReflect.Descriptor instead.
func (*DeleteBuildRequest) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteBuildRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

type StopBuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId string `protobuf:"bytes,1,opt,name=buildId,proto3" json:"buildId,omitempty"`
}

func (x *StopBuildRequest) Reset() {
	*x = StopBuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopBuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopBuildRequest) ProtoMessage() {}

func (x *StopBuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopBuildRequest.ProtoReflect.Descriptor instead.
func (*StopBuildRequest) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{16}
}

func (x *StopBuildRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_pb_v1_pipeline_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pb_v1_pipeline_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_api_pb_v1_pipeline_proto_rawDescGZIP(), []int{17}
}

var File_api_pb_v1_pipeline_proto protoreflect.FileDescriptor

var file_api_pb_v1_pipeline_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x72, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x22, 0xeb, 0x01, 0x0a, 0x08, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x12,
	0x3b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc1, 0x02, 0x0a, 0x04, 0x46, 0x6c, 0x6f, 0x77,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x2d, 0x0a, 0x06, 0x73, 0x63, 0x6d, 0x43, 0x66, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x6d, 0x43, 0x66, 0x67, 0x52, 0x06, 0x73, 0x63, 0x6d, 0x43, 0x66, 0x67, 0x12, 0x33,
	0x0a, 0x08, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x43, 0x66, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x43, 0x66, 0x67, 0x52, 0x08, 0x73, 0x68, 0x65, 0x6c, 0x6c,
	0x43, 0x66, 0x67, 0x12, 0x45, 0x0a, 0x0e, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x43, 0x66, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x66, 0x67, 0x52, 0x0e, 0x64, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x66, 0x67, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x75,
	0x61, 0x43, 0x66, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x75, 0x61, 0x43, 0x66,
	0x67, 0x52, 0x06, 0x6c, 0x75, 0x61, 0x43, 0x66, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x45,
	0x6e, 0x76, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x6e, 0x6f, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x8f, 0x01, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x9b, 0x01,
	0x0a, 0x06, 0x53, 0x63, 0x6d, 0x43, 0x66, 0x67, 0x12, 0x30, 0x0a, 0x07, 0x76, 0x63, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x43, 0x53, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x76, 0x63, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x2d, 0x0a, 0x06,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x08,
	0x53, 0x68, 0x65, 0x6c, 0x6c, 0x43, 0x66, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x69,
	0x74, 0x68, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x77, 0x69, 0x74, 0x68, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x0f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e,
	0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x98, 0x01, 0x0a, 0x0e, 0x44, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x66, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x73,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61,
	0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75, 0x73,
	0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x70, 0x75, 0x73, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x22, 0x50, 0x0a, 0x06, 0x4c, 0x75, 0x61, 0x43, 0x66, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x78, 0x69, 0x74, 0x57, 0x68, 0x65, 0x6e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x65, 0x78, 0x69, 0x74, 0x57, 0x68, 0x65, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4f, 0x63,
	0x63, 0x75, 0x72, 0x22, 0xbf, 0x03, 0x0a, 0x07, 0x43, 0x75, 0x72, 0x6c, 0x43, 0x66, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x75, 0x72, 0x6c, 0x43, 0x66, 0x67, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x72,
	0x65, 0x71, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x6c, 0x43, 0x66, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x75, 0x72, 0x6c, 0x43, 0x66, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x52, 0x65,
	0x71, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x52, 0x65, 0x71, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x35, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x22, 0x35,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x6f, 0x72, 0x6d, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03,
	0x58, 0x6d, 0x6c, 0x10, 0x03, 0x22, 0xa9, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x3a, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x22, 0x36, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x72, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x4c, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x6f, 0x72,
	0x65, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x10,
	0x03, 0x22, 0xc4, 0x01, 0x0a, 0x0c, 0x46, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x2d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x72,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xd9, 0x03, 0x0a, 0x10, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a,
	0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x43, 0x0a, 0x0e, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x75, 0x72, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x45,
	0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x1a, 0x36, 0x0a, 0x08,
	0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x43, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x29, 0x0a, 0x0d, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x64, 0x22, 0x4a, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x3b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2e, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x2c, 0x0a,
	0x10, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x38, 0x0a, 0x08,
	0x46, 0x6c, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x43, 0x4d, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x4c, 0x75, 0x61, 0x10, 0x03, 0x2a, 0x1b, 0x0a, 0x07, 0x56, 0x43, 0x53, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x69, 0x74, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x56,
	0x4e, 0x10, 0x01, 0x2a, 0x6c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x77, 0x64, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x54, 0x79, 0x70, 0x65, 0x53, 0x53, 0x48, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x79, 0x70, 0x65, 0x47,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f,
	0x54, 0x79, 0x70, 0x65, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10,
	0x04, 0x2a, 0x3a, 0x0a, 0x0f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x6c, 0x77, 0x61, 0x79, 0x73,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x65, 0x76, 0x65, 0x72, 0x10, 0x02, 0x2a, 0x25, 0x0a,
	0x12, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x6e, 0x64, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x72, 0x10, 0x01, 0x2a, 0x56, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64,
	0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x10, 0x05, 0x32, 0xb5, 0x02, 0x0a,
	0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x42, 0x0a, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12,
	0x1b, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x2e, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74,
	0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4e, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x21, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x72, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x70,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1f, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2e,
	0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x2e, 0x63, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x04, 0x5a, 0x02, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_pb_v1_pipeline_proto_rawDescOnce sync.Once
	file_api_pb_v1_pipeline_proto_rawDescData = file_api_pb_v1_pipeline_proto_rawDesc
)

func file_api_pb_v1_pipeline_proto_rawDescGZIP() []byte {
	file_api_pb_v1_pipeline_proto_rawDescOnce.Do(func() {
		file_api_pb_v1_pipeline_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_pb_v1_pipeline_proto_rawDescData)
	})
	return file_api_pb_v1_pipeline_proto_rawDescData
}

var file_api_pb_v1_pipeline_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_api_pb_v1_pipeline_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_api_pb_v1_pipeline_proto_goTypes = []interface{}{
	(FlowType)(0),              // 0: trident.ci.v1.FlowType
	(VCSType)(0),               // 1: trident.ci.v1.VCSType
	(CreditType)(0),            // 2: trident.ci.v1.CreditType
	(ImagePullPolicy)(0),       // 3: trident.ci.v1.ImagePullPolicy
	(ConditionConnector)(0),    // 4: trident.ci.v1.ConditionConnector
	(Status)(0),                // 5: trident.ci.v1.Status
	(CurlCfg_RequestType)(0),   // 6: trident.ci.v1.CurlCfg.RequestType
	(CurlCfg_ContentType)(0),   // 7: trident.ci.v1.CurlCfg.ContentType
	(Condition_Compare)(0),     // 8: trident.ci.v1.Condition.Compare
	(*Pipeline)(nil),           // 9: trident.ci.v1.Pipeline
	(*Flow)(nil),               // 10: trident.ci.v1.Flow
	(*Credit)(nil),             // 11: trident.ci.v1.Credit
	(*ScmCfg)(nil),             // 12: trident.ci.v1.ScmCfg
	(*ShellCfg)(nil),           // 13: trident.ci.v1.ShellCfg
	(*DockerBuildCfg)(nil),     // 14: trident.ci.v1.DockerBuildCfg
	(*LuaCfg)(nil),             // 15: trident.ci.v1.LuaCfg
	(*CurlCfg)(nil),            // 16: trident.ci.v1.CurlCfg
	(*Condition)(nil),          // 17: trident.ci.v1.Condition
	(*FlowProgress)(nil),       // 18: trident.ci.v1.FlowProgress
	(*PipelineProgress)(nil),   // 19: trident.ci.v1.PipelineProgress
	(*BuildRequest)(nil),       // 20: trident.ci.v1.BuildRequest
	(*BuildResponse)(nil),      // 21: trident.ci.v1.BuildResponse
	(*GetBuildRequest)(nil),    // 22: trident.ci.v1.GetBuildRequest
	(*BuildDetail)(nil),        // 23: trident.ci.v1.BuildDetail
	(*DeleteBuildRequest)(nil), // 24: trident.ci.v1.DeleteBuildRequest
	(*StopBuildRequest)(nil),   // 25: trident.ci.v1.StopBuildRequest
	(*EmptyResponse)(nil),      // 26: trident.ci.v1.EmptyResponse
	nil,                        // 27: trident.ci.v1.Pipeline.ParamsEntry
	nil,                        // 28: trident.ci.v1.PipelineProgress.EnvEntry
}
var file_api_pb_v1_pipeline_proto_depIdxs = []int32{
	10, // 0: trident.ci.v1.Pipeline.flows:type_name -> trident.ci.v1.Flow
	27, // 1: trident.ci.v1.Pipeline.params:type_name -> trident.ci.v1.Pipeline.ParamsEntry
	0,  // 2: trident.ci.v1.Flow.type:type_name -> trident.ci.v1.FlowType
	12, // 3: trident.ci.v1.Flow.scmCfg:type_name -> trident.ci.v1.ScmCfg
	13, // 4: trident.ci.v1.Flow.shellCfg:type_name -> trident.ci.v1.ShellCfg
	14, // 5: trident.ci.v1.Flow.dockerBuildCfg:type_name -> trident.ci.v1.DockerBuildCfg
	15, // 6: trident.ci.v1.Flow.luaCfg:type_name -> trident.ci.v1.LuaCfg
	2,  // 7: trident.ci.v1.Credit.type:type_name -> trident.ci.v1.CreditType
	1,  // 8: trident.ci.v1.ScmCfg.vcsType:type_name -> trident.ci.v1.VCSType
	11, // 9: trident.ci.v1.ScmCfg.credit:type_name -> trident.ci.v1.Credit
	3,  // 10: trident.ci.v1.ShellCfg.imagePullPolicy:type_name -> trident.ci.v1.ImagePullPolicy
	6,  // 11: trident.ci.v1.CurlCfg.reqType:type_name -> trident.ci.v1.CurlCfg.RequestType
	7,  // 12: trident.ci.v1.CurlCfg.reqContentType:type_name -> trident.ci.v1.CurlCfg.ContentType
	7,  // 13: trident.ci.v1.CurlCfg.respContentType:type_name -> trident.ci.v1.CurlCfg.ContentType
	8,  // 14: trident.ci.v1.Condition.compare:type_name -> trident.ci.v1.Condition.Compare
	10, // 15: trident.ci.v1.FlowProgress.flow:type_name -> trident.ci.v1.Flow
	5,  // 16: trident.ci.v1.FlowProgress.status:type_name -> trident.ci.v1.Status
	9,  // 17: trident.ci.v1.PipelineProgress.pipeline:type_name -> trident.ci.v1.Pipeline
	5,  // 18: trident.ci.v1.PipelineProgress.status:type_name -> trident.ci.v1.Status
	18, // 19: trident.ci.v1.PipelineProgress.flowProgresses:type_name -> trident.ci.v1.FlowProgress
	28, // 20: trident.ci.v1.PipelineProgress.env:type_name -> trident.ci.v1.PipelineProgress.EnvEntry
	9,  // 21: trident.ci.v1.BuildRequest.pipeline:type_name -> trident.ci.v1.Pipeline
	19, // 22: trident.ci.v1.BuildDetail.progress:type_name -> trident.ci.v1.PipelineProgress
	20, // 23: trident.ci.v1.Build.Build:input_type -> trident.ci.v1.BuildRequest
	22, // 24: trident.ci.v1.Build.GetBuildResult:input_type -> trident.ci.v1.GetBuildRequest
	24, // 25: trident.ci.v1.Build.DeleteBuild:input_type -> trident.ci.v1.DeleteBuildRequest
	25, // 26: trident.ci.v1.Build.StopBuild:input_type -> trident.ci.v1.StopBuildRequest
	21, // 27: trident.ci.v1.Build.Build:output_type -> trident.ci.v1.BuildResponse
	23, // 28: trident.ci.v1.Build.GetBuildResult:output_type -> trident.ci.v1.BuildDetail
	26, // 29: trident.ci.v1.Build.DeleteBuild:output_type -> trident.ci.v1.EmptyResponse
	26, // 30: trident.ci.v1.Build.StopBuild:output_type -> trident.ci.v1.EmptyResponse
	27, // [27:31] is the sub-list for method output_type
	23, // [23:27] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_api_pb_v1_pipeline_proto_init() }
func file_api_pb_v1_pipeline_proto_init() {
	if File_api_pb_v1_pipeline_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_pb_v1_pipeline_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScmCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShellCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerBuildCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LuaCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurlCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PipelineProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopBuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_pb_v1_pipeline_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_pb_v1_pipeline_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_pb_v1_pipeline_proto_goTypes,
		DependencyIndexes: file_api_pb_v1_pipeline_proto_depIdxs,
		EnumInfos:         file_api_pb_v1_pipeline_proto_enumTypes,
		MessageInfos:      file_api_pb_v1_pipeline_proto_msgTypes,
	}.Build()
	File_api_pb_v1_pipeline_proto = out.File
	file_api_pb_v1_pipeline_proto_rawDesc = nil
	file_api_pb_v1_pipeline_proto_goTypes = nil
	file_api_pb_v1_pipeline_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BuildClient is the client API for Build service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BuildClient interface {
	Build(ctx context.Context, in *BuildRequest, opts ...grpc.CallOption) (*BuildResponse, error)
	GetBuildResult(ctx context.Context, in *GetBuildRequest, opts ...grpc.CallOption) (*BuildDetail, error)
	DeleteBuild(ctx context.Context, in *DeleteBuildRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	StopBuild(ctx context.Context, in *StopBuildRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type buildClient struct {
	cc grpc.ClientConnInterface
}

func NewBuildClient(cc grpc.ClientConnInterface) BuildClient {
	return &buildClient{cc}
}

func (c *buildClient) Build(ctx context.Context, in *BuildRequest, opts ...grpc.CallOption) (*BuildResponse, error) {
	out := new(BuildResponse)
	err := c.cc.Invoke(ctx, "/trident.ci.v1.Build/Build", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildClient) GetBuildResult(ctx context.Context, in *GetBuildRequest, opts ...grpc.CallOption) (*BuildDetail, error) {
	out := new(BuildDetail)
	err := c.cc.Invoke(ctx, "/trident.ci.v1.Build/GetBuildResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildClient) DeleteBuild(ctx context.Context, in *DeleteBuildRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/trident.ci.v1.Build/DeleteBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildClient) StopBuild(ctx context.Context, in *StopBuildRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/trident.ci.v1.Build/StopBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BuildServer is the server API for Build service.
type BuildServer interface {
	Build(context.Context, *BuildRequest) (*BuildResponse, error)
	GetBuildResult(context.Context, *GetBuildRequest) (*BuildDetail, error)
	DeleteBuild(context.Context, *DeleteBuildRequest) (*EmptyResponse, error)
	StopBuild(context.Context, *StopBuildRequest) (*EmptyResponse, error)
}

// UnimplementedBuildServer can be embedded to have forward compatible implementations.
type UnimplementedBuildServer struct {
}

func (*UnimplementedBuildServer) Build(context.Context, *BuildRequest) (*BuildResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Build not implemented")
}
func (*UnimplementedBuildServer) GetBuildResult(context.Context, *GetBuildRequest) (*BuildDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBuildResult not implemented")
}
func (*UnimplementedBuildServer) DeleteBuild(context.Context, *DeleteBuildRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBuild not implemented")
}
func (*UnimplementedBuildServer) StopBuild(context.Context, *StopBuildRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopBuild not implemented")
}

func RegisterBuildServer(s *grpc.Server, srv BuildServer) {
	s.RegisterService(&_Build_serviceDesc, srv)
}

func _Build_Build_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServer).Build(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trident.ci.v1.Build/Build",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServer).Build(ctx, req.(*BuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Build_GetBuildResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServer).GetBuildResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trident.ci.v1.Build/GetBuildResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServer).GetBuildResult(ctx, req.(*GetBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Build_DeleteBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServer).DeleteBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trident.ci.v1.Build/DeleteBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServer).DeleteBuild(ctx, req.(*DeleteBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Build_StopBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildServer).StopBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trident.ci.v1.Build/StopBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildServer).StopBuild(ctx, req.(*StopBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Build_serviceDesc = grpc.ServiceDesc{
	ServiceName: "trident.ci.v1.Build",
	HandlerType: (*BuildServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Build",
			Handler:    _Build_Build_Handler,
		},
		{
			MethodName: "GetBuildResult",
			Handler:    _Build_GetBuildResult_Handler,
		},
		{
			MethodName: "DeleteBuild",
			Handler:    _Build_DeleteBuild_Handler,
		},
		{
			MethodName: "StopBuild",
			Handler:    _Build_StopBuild_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/pb/v1/pipeline.proto",
}
